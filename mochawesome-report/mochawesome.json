{
  "stats": {
    "suites": 25,
    "tests": 50,
    "passes": 50,
    "pending": 0,
    "failures": 0,
    "start": "2020-05-24T08:25:37.989Z",
    "end": "2020-05-24T08:25:42.642Z",
    "duration": 4653,
    "testsRegistered": 50,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f42845f9-3096-4b30-a00c-8cb455179463",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ed659c2d-5ef8-43e5-b44d-12f22cacaee1",
          "title": "Listener",
          "fullFile": "D:\\247buddy\\backend\\test\\1_listener.js",
          "file": "\\test\\1_listener.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Listener \"before all\" hook",
              "timedOut": false,
              "duration": 19,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await Listener.deleteMany({});",
              "err": {},
              "uuid": "18827d1c-831d-45fb-b62c-88d10c931e1c",
              "parentUUID": "ed659c2d-5ef8-43e5-b44d-12f22cacaee1",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f4835cc1-ea9f-4473-8e07-fb0d19dd2c2c",
              "title": "Register/Login",
              "fullFile": "D:\\247buddy\\backend\\test\\1_listener.js",
              "file": "\\test\\1_listener.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should register a listener",
                  "fullTitle": "Listener Register/Login it should register a listener",
                  "timedOut": false,
                  "duration": 105,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/listener/register\")\n  .send({\n    userName: \"Test\",\n    email: \"mamadklashinkov@gmail.com\",\n    categories: [\"11\", \"1123\"],\n    number: \"+917428730894\",\n    test: \"true\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"listenerDoc\");\n    done();\n  });",
                  "err": {},
                  "uuid": "a7f1c0c2-bf0f-4a34-a354-e520f253b962",
                  "parentUUID": "f4835cc1-ea9f-4473-8e07-fb0d19dd2c2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should login the listener",
                  "fullTitle": "Listener Register/Login it should login the listener",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/listener/auth\")\n  .send({\n    password: \"0000\",\n    number: \"+917428730894\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"listenerDoc\");\n    expect(res.body).to.have.property(\"token\");\n    done();\n  });",
                  "err": {},
                  "uuid": "cb7ff768-baca-438e-82b7-b6fb9f73fee1",
                  "parentUUID": "f4835cc1-ea9f-4473-8e07-fb0d19dd2c2c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should request the OTP",
                  "fullTitle": "Listener Register/Login it should request the OTP",
                  "timedOut": false,
                  "duration": 25,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(\"/listener/request/otp\")\n  .send({\n    number: \"+917428730894\",\n    test: \"true\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"otpUpdated\");\n    expect(res.body).to.have.property(\"otpSent\");\n    expect(res.body.otpUpdated).to.equal(true);\n    expect(res.body.otpSent).to.equal(true);\n    done();\n  });",
                  "err": {},
                  "uuid": "9f8e7aac-d7cf-4295-bb1d-8a2dbf683d17",
                  "parentUUID": "f4835cc1-ea9f-4473-8e07-fb0d19dd2c2c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a7f1c0c2-bf0f-4a34-a354-e520f253b962",
                "cb7ff768-baca-438e-82b7-b6fb9f73fee1",
                "9f8e7aac-d7cf-4295-bb1d-8a2dbf683d17"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 150,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "d6bc9251-f2a8-49c9-be64-4554f4b70c3b",
              "title": "Gets",
              "fullFile": "D:\\247buddy\\backend\\test\\1_listener.js",
              "file": "\\test\\1_listener.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Listener Gets \"before all\" hook",
                  "timedOut": false,
                  "duration": 12,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await Listener.findOne({ cell: \"917428730894\" });\nid = doc._id;\ntoken = jwt.sign({ id: doc._id }, process.env.JWT_SECRET);",
                  "err": {},
                  "uuid": "fa560df0-4a1a-4720-bd4f-1ec26bd50a35",
                  "parentUUID": "d6bc9251-f2a8-49c9-be64-4554f4b70c3b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should get multiple listeners",
                  "fullTitle": "Listener Gets it should get multiple listeners",
                  "timedOut": false,
                  "duration": 19,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .get(\"/listener/get/all\")\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"listenerDocs\");\n    expect(res.body.listenerDocs).to.be.an(\"array\");\n    expect(res.body.listenerDocs).not.be.empty;\n    done();\n  });",
                  "err": {},
                  "uuid": "abd42647-5e28-4665-85d6-775a9230a331",
                  "parentUUID": "d6bc9251-f2a8-49c9-be64-4554f4b70c3b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should get a single listener",
                  "fullTitle": "Listener Gets it should get a single listener",
                  "timedOut": false,
                  "duration": 15,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .get(`/listener/get/single/${id}`)\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"listenerDoc\");\n    expect(res.body.listenerDoc).to.be.an(\"object\");\n    done();\n  });",
                  "err": {},
                  "uuid": "2a1b29ac-1202-4859-bf11-965bdc4113e6",
                  "parentUUID": "d6bc9251-f2a8-49c9-be64-4554f4b70c3b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should get a single username",
                  "fullTitle": "Listener Gets it should get a single username",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .get(`/listener/get/username`)\n  .set(\"x-auth-token-listener\", token)\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"userName\");\n    expect(res.body.userName).to.be.a(\"String\");\n    done();\n  });",
                  "err": {},
                  "uuid": "d9b5cf77-2994-4ec0-9595-fc92ec71c971",
                  "parentUUID": "d6bc9251-f2a8-49c9-be64-4554f4b70c3b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "abd42647-5e28-4665-85d6-775a9230a331",
                "2a1b29ac-1202-4859-bf11-965bdc4113e6",
                "d9b5cf77-2994-4ec0-9595-fc92ec71c971"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 50,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "a331877f-36fc-46f9-9c7d-67681491cd36",
              "title": "Set status",
              "fullFile": "D:\\247buddy\\backend\\test\\1_listener.js",
              "file": "\\test\\1_listener.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should set listener status",
                  "fullTitle": "Listener Set status it should set listener status",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(\"/listener/set/status\")\n  .set(\"x-auth-token-listener\", token)\n  .send({ status: \"true\" })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"isOnline\");\n    expect(res.body.isOnline).to.equal(true);\n    done();\n  });",
                  "err": {},
                  "uuid": "c50968aa-c8b0-49e9-85f4-a64edd220e22",
                  "parentUUID": "a331877f-36fc-46f9-9c7d-67681491cd36",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c50968aa-c8b0-49e9-85f4-a64edd220e22"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 17,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "d28f4806-9230-43d1-9c12-a2a7d4e424e6",
              "title": "401 test",
              "fullFile": "D:\\247buddy\\backend\\test\\1_listener.js",
              "file": "\\test\\1_listener.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should get a 401 for username",
                  "fullTitle": "Listener 401 test it should get a 401 for username",
                  "timedOut": false,
                  "duration": 16,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/listener/register\")\n  .send({\n    userName: \"Test\",\n    email: \"madsdsdmadklashinkov@gmail.com\",\n    categories: [\"1sds1\", \"1123\"],\n    number: \"+918555254822\",\n    test: \"true\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(401);\n    expect(res.body).to.have.property(\"isSame\");\n    expect(res.body.isSame).to.equal(\"userName\");\n    done();\n  });",
                  "err": {},
                  "uuid": "3db9c734-c9c1-491c-820c-12a11d0a9b32",
                  "parentUUID": "d28f4806-9230-43d1-9c12-a2a7d4e424e6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should get a 401 for email",
                  "fullTitle": "Listener 401 test it should get a 401 for email",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/listener/register\")\n  .send({\n    userName: \"Tefsfst\",\n    email: \"mamadklashinkov@gmail.com\",\n    categories: [\"1sds1\", \"1123\"],\n    number: \"+918555254822\",\n    test: \"true\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(401);\n    expect(res.body).to.have.property(\"isSame\");\n    expect(res.body.isSame).to.equal(\"email\");\n    done();\n  });",
                  "err": {},
                  "uuid": "e86125bd-2ffa-4868-96b5-878e17ca0fd1",
                  "parentUUID": "d28f4806-9230-43d1-9c12-a2a7d4e424e6",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should get a 401 for number",
                  "fullTitle": "Listener 401 test it should get a 401 for number",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/listener/register\")\n  .send({\n    userName: \"Tefst\",\n    email: \"mamadklashinkhhov@gmail.com\",\n    categories: [\"1sds1\", \"1123\"],\n    number: \"+917428730894\",\n    test: \"true\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(401);\n    expect(res.body).to.have.property(\"isSame\");\n    expect(res.body.isSame).to.equal(\"number\");\n    done();\n  });",
                  "err": {},
                  "uuid": "64d7538b-2eaa-4eb0-ae42-4fd1dc1515fd",
                  "parentUUID": "d28f4806-9230-43d1-9c12-a2a7d4e424e6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3db9c734-c9c1-491c-820c-12a11d0a9b32",
                "e86125bd-2ffa-4868-96b5-878e17ca0fd1",
                "64d7538b-2eaa-4eb0-ae42-4fd1dc1515fd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 51,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "691a507f-ce1d-4f6a-ae8c-d1e9d1ac5ebd",
              "title": "404s",
              "fullFile": "D:\\247buddy\\backend\\test\\1_listener.js",
              "file": "\\test\\1_listener.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Listener 404s \"before all\" hook",
                  "timedOut": false,
                  "duration": 2,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "await Listener.deleteMany({});",
                  "err": {},
                  "uuid": "c34d9f60-7d59-4724-bb4c-02a7fb113f01",
                  "parentUUID": "691a507f-ce1d-4f6a-ae8c-d1e9d1ac5ebd",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should get 404 for getting all the listeners",
                  "fullTitle": "Listener 404s it should get 404 for getting all the listeners",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .get(\"/listener/get/all\")\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(404);\n    expect(res.body).to.have.property(\"noListenerFound\");\n    expect(res.body.noListenerFound).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "4bc82bc2-4f3f-48a6-8590-cb94604e74b6",
                  "parentUUID": "691a507f-ce1d-4f6a-ae8c-d1e9d1ac5ebd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should get 404 for a single listener",
                  "fullTitle": "Listener 404s it should get 404 for a single listener",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .get(`/listener/get/single/${id}`)\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(404);\n    expect(res.body).to.have.property(\"noListenerDoc\");\n    expect(res.body.noListenerDoc).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "414c329b-1c80-4ca9-b2e2-b00b38986598",
                  "parentUUID": "691a507f-ce1d-4f6a-ae8c-d1e9d1ac5ebd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should get a single username",
                  "fullTitle": "Listener 404s it should get a single username",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .get(`/listener/get/username`)\n  .set(\"x-auth-token-listener\", token)\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(404);\n    expect(res.body).to.have.property(\"noListenerDoc\");\n    expect(res.body.noListenerDoc).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "ae90f344-75aa-4a5d-ad4d-379183bcba38",
                  "parentUUID": "691a507f-ce1d-4f6a-ae8c-d1e9d1ac5ebd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4bc82bc2-4f3f-48a6-8590-cb94604e74b6",
                "414c329b-1c80-4ca9-b2e2-b00b38986598",
                "ae90f344-75aa-4a5d-ad4d-379183bcba38"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 13,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "3b7909a0-6afb-412f-a78d-565cf0bae430",
          "title": "Session",
          "fullFile": "D:\\247buddy\\backend\\test\\2_pairing.js",
          "file": "\\test\\2_pairing.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Session \"before all\" hook",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Pairing.deleteMany({});\nListener.deleteMany({});\nconst listenerOne = new Listener({\n  \"approvalStatus.approved\": true,\n  emailVerified: true,\n  cellActivated: true,\n  email: \"test1@test.com\",\n  categories: [\"TestCat1\", \"TestCat2\"],\n  userName: \"Test1\",\n  \"status.online\": true,\n});\nconst listenerTwo = new Listener({\n  \"approvalStatus.approved\": true,\n  emailVerified: true,\n  cellActivated: true,\n  email: \"test2@test.com\",\n  categories: [\"TestCat3\", \"TestCat2\"],\n  userName: \"Test2\",\n  \"status.currentEngagedSession\": \"None\",\n  \"status.online\": false,\n});\nlistenerOne.save().then((listenerDocOne) => {\n  listenerTwo.save().then((listenerDocTwo) => {\n    idOne = listenerDocOne._id;\n    idTwo = listenerDocTwo._id;\n    tokenOne = jwt.sign({ id: idOne }, process.env.JWT_SECRET);\n    tokenTwo = jwt.sign({ id: idTwo }, process.env.JWT_SECRET);\n  });\n});",
              "err": {},
              "uuid": "6f9c5bc6-6f58-4414-b800-85119de70ffc",
              "parentUUID": "3b7909a0-6afb-412f-a78d-565cf0bae430",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "b2a89a06-493b-4069-894b-babec8f2bc88",
              "title": "Pairing Start",
              "fullFile": "D:\\247buddy\\backend\\test\\2_pairing.js",
              "file": "\\test\\2_pairing.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should pair between a listener and a seeker",
                  "fullTitle": "Session Pairing Start it should pair between a listener and a seeker",
                  "timedOut": false,
                  "duration": 21,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/session/pairup/randomly\")\n  .send({ seekerNumber: \"+989385130604\" })\n  .end((err, res) => {\n    if (err) done(err);\n    console.log(res.body);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"presentedListeners\");\n    expect(res.body).to.have.property(\"sessionDoc\");\n    expect(res.body.presentedListeners).to.be.an(\"array\");\n    expect(res.body.presentedListeners).not.be.empty;\n    expect(res.body.sessionDoc).to.be.an(\"object\");\n    expect(res.body.presentedListeners).to.include(idOne.toString());\n    done();\n  });",
                  "err": {},
                  "uuid": "d5b548bc-d959-4059-983e-0383692cbade",
                  "parentUUID": "b2a89a06-493b-4069-894b-babec8f2bc88",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should pair between a listener and a seeker based on categories",
                  "fullTitle": "Session Pairing Start it should pair between a listener and a seeker based on categories",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/session/pairup/category\")\n  .send({ seekerNumber: \"+989385130604\", categories: [\"TestCat2\"] })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"presentedListeners\");\n    expect(res.body).to.have.property(\"sessionDoc\");\n    expect(res.body.presentedListeners).to.be.an(\"array\");\n    expect(res.body.presentedListeners).not.be.empty;\n    expect(res.body.sessionDoc).to.be.an(\"object\");\n    expect(res.body.presentedListeners).to.include(idOne.toString());\n    done();\n  });",
                  "err": {},
                  "uuid": "12d9705f-e61f-4577-8103-61094a9cae40",
                  "parentUUID": "b2a89a06-493b-4069-894b-babec8f2bc88",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d5b548bc-d959-4059-983e-0383692cbade",
                "12d9705f-e61f-4577-8103-61094a9cae40"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 34,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "b3c5f7f9-e33c-412f-94c8-3529e9c581d0",
              "title": "Pairing accept/disconnect",
              "fullFile": "D:\\247buddy\\backend\\test\\2_pairing.js",
              "file": "\\test\\2_pairing.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Session Pairing accept/disconnect \"before all\" hook",
                  "timedOut": false,
                  "duration": 4,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const session = await Pairing.find({});\nsessionId = session[0]._id;",
                  "err": {},
                  "uuid": "3d74e2c4-3f04-4dbf-b9a5-1811ea3c58be",
                  "parentUUID": "b3c5f7f9-e33c-412f-94c8-3529e9c581d0",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should accept the session",
                  "fullTitle": "Session Pairing accept/disconnect it should accept the session",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/session/accept/${sessionId}`)\n  .set(\"x-auth-token-listener\", tokenOne)\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"tokens\");\n    expect(res.body).to.have.property(\"nicks\");\n    expect(res.body).to.have.property(\"listenerId\");\n    expect(res.body).to.have.property(\"sessionDoc\");\n    expect(res.body.tokens).to.be.an(\"object\");\n    expect(res.body.nicks).to.be.an(\"object\");\n    expect(res.body.listenerId).to.equal(idOne.toString());\n    expect(res.body.sessionDoc._id).to.equal(sessionId.toString());\n    expect(res.body.sessionDoc.listenerId).to.equal(idOne.toString());\n    done();\n  });",
                  "err": {},
                  "uuid": "db1b4044-8991-43ec-9154-3d9b6aea372c",
                  "parentUUID": "b3c5f7f9-e33c-412f-94c8-3529e9c581d0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should end the session",
                  "fullTitle": "Session Pairing accept/disconnect it should end the session",
                  "timedOut": false,
                  "duration": 19,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/session/disconnect/${sessionId}`)\n  .set(\"x-auth-token-listener\", tokenOne)\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"disconnected\");\n    expect(res.body.disconnected).to.be.an(\"boolean\");\n    expect(res.body.disconnected).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "065e61e7-da8f-4d2e-a274-b9517a7e57db",
                  "parentUUID": "b3c5f7f9-e33c-412f-94c8-3529e9c581d0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "db1b4044-8991-43ec-9154-3d9b6aea372c",
                "065e61e7-da8f-4d2e-a274-b9517a7e57db"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 28,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "efffed69-553a-46ee-826d-5674f2207d06",
              "title": "Reports",
              "fullFile": "D:\\247buddy\\backend\\test\\2_pairing.js",
              "file": "\\test\\2_pairing.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "Session Reports \"before all\" hook",
                  "timedOut": false,
                  "duration": 0,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "numberToken = jwt.sign(\n  { number: helpers.popNumber(\"+989385130604\") },\n  process.env.JWT_SECRET\n);\ndone();",
                  "err": {},
                  "uuid": "6e4925ea-f718-47cc-954c-bc92dd1d7541",
                  "parentUUID": "efffed69-553a-46ee-826d-5674f2207d06",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should report the listener",
                  "fullTitle": "Session Reports it should report the listener",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/session/report/by/seeker/${sessionId}`)\n  .set(\"x-auth-token-seeker\", numberToken)\n  .send({ listenerId: idOne })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"reported\");\n    expect(res.body.reported).to.be.an(\"boolean\");\n    expect(res.body.reported).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "1d8d4894-527d-4d6a-b8ab-7eb1bbfe5277",
                  "parentUUID": "efffed69-553a-46ee-826d-5674f2207d06",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should report the seeker",
                  "fullTitle": "Session Reports it should report the seeker",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(`/session/report/by/listener/${sessionId}`)\n  .set(\"x-auth-token-listener\", tokenOne)\n  .send({ seekerNumber: \"+989385130604\" })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"reported\");\n    expect(res.body.reported).to.be.an(\"boolean\");\n    expect(res.body.reported).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "d9280ae3-1332-4ce1-8fae-300f8600e87d",
                  "parentUUID": "efffed69-553a-46ee-826d-5674f2207d06",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1d8d4894-527d-4d6a-b8ab-7eb1bbfe5277",
                "d9280ae3-1332-4ce1-8fae-300f8600e87d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 27,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "259ff4bc-c558-45b9-89ca-74f5e405cc59",
              "title": "Gets",
              "fullFile": "D:\\247buddy\\backend\\test\\2_pairing.js",
              "file": "\\test\\2_pairing.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should get all the sessions",
                  "fullTitle": "Session Gets it should get all the sessions",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .get(`/session/get/all`)\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"sessionDocs\");\n    expect(res.body.sessionDocs).to.be.an(\"array\");\n    expect(res.body.sessionDocs).not.be.empty;\n    done();\n  });",
                  "err": {},
                  "uuid": "95210748-02cc-4161-a19e-6a6c1b186011",
                  "parentUUID": "259ff4bc-c558-45b9-89ca-74f5e405cc59",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should get all the sessions",
                  "fullTitle": "Session Gets it should get all the sessions",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .get(`/session/get/single/${sessionId}`)\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"sessionDoc\");\n    expect(res.body.sessionDoc).to.be.an(\"object\");\n    done();\n  });",
                  "err": {},
                  "uuid": "561dd57a-87af-4e14-8209-b0318636b872",
                  "parentUUID": "259ff4bc-c558-45b9-89ca-74f5e405cc59",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [
                {
                  "uuid": "919c32fa-8989-4900-84c3-4c736f1108b7",
                  "title": "Gets 404",
                  "fullFile": "D:\\247buddy\\backend\\test\\2_pairing.js",
                  "file": "\\test\\2_pairing.js",
                  "beforeHooks": [
                    {
                      "title": "\"before all\" hook",
                      "fullTitle": "Session Gets Gets 404 \"before all\" hook",
                      "timedOut": false,
                      "duration": 1,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "await Pairing.deleteMany({});",
                      "err": {},
                      "uuid": "06fadb62-7752-4242-9731-543215cad8ad",
                      "parentUUID": "919c32fa-8989-4900-84c3-4c736f1108b7",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "it should get all the sessions 404",
                      "fullTitle": "Session Gets Gets 404 it should get all the sessions 404",
                      "timedOut": false,
                      "duration": 7,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai\n  .request(server)\n  .get(`/session/get/all`)\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(404);\n    expect(res.body).to.have.property(\"noSessionFound\");\n    expect(res.body.noSessionFound).to.be.true;\n    done();\n  });",
                      "err": {},
                      "uuid": "66655925-e973-4ba0-8a84-028776a1862d",
                      "parentUUID": "919c32fa-8989-4900-84c3-4c736f1108b7",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "it should get a single session 404",
                      "fullTitle": "Session Gets Gets 404 it should get a single session 404",
                      "timedOut": false,
                      "duration": 5,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai\n  .request(server)\n  .get(`/session/get/single/${sessionId}`)\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(404);\n    expect(res.body).to.have.property(\"noSessionFound\");\n    expect(res.body.noSessionFound).to.be.true;\n    done();\n  });",
                      "err": {},
                      "uuid": "768dcdeb-db6f-4f9e-abaf-bcbbb22d92ed",
                      "parentUUID": "919c32fa-8989-4900-84c3-4c736f1108b7",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "66655925-e973-4ba0-8a84-028776a1862d",
                    "768dcdeb-db6f-4f9e-abaf-bcbbb22d92ed"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 12,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                }
              ],
              "passes": [
                "95210748-02cc-4161-a19e-6a6c1b186011",
                "561dd57a-87af-4e14-8209-b0318636b872"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 12,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "394c00a9-c30c-42b5-a8f9-63a62cd93e6f",
          "title": "SuperAdmin",
          "fullFile": "D:\\247buddy\\backend\\test\\3_admin.js",
          "file": "\\test\\3_admin.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "SuperAdmin \"before all\" hook",
              "timedOut": false,
              "duration": 4,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await Admin.deleteMany({});\nawait Listener.deleteMany({});\nawait SuperAdmin.deleteMany({});",
              "err": {},
              "uuid": "579e3214-9512-425d-9418-0329723b87c4",
              "parentUUID": "394c00a9-c30c-42b5-a8f9-63a62cd93e6f",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "508e0c6b-7087-4471-9306-47ef946c15ab",
              "title": "Create Super Admin",
              "fullFile": "D:\\247buddy\\backend\\test\\3_admin.js",
              "file": "\\test\\3_admin.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should create a superAdmin",
                  "fullTitle": "SuperAdmin Create Super Admin it should create a superAdmin",
                  "timedOut": false,
                  "duration": 311,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/superAdmin/create\")\n  .send({\n    userName: \"To\",\n    password: \"Kill\",\n    email: \"A@mockingbird.com\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"superAdminCreated\");\n    expect(res.body.superAdminCreated).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "83bb5f3e-a68b-4412-98da-5e118c1a1784",
                  "parentUUID": "508e0c6b-7087-4471-9306-47ef946c15ab",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should create a superAdmin but throw a 403 because it exists",
                  "fullTitle": "SuperAdmin Create Super Admin it should create a superAdmin but throw a 403 because it exists",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/superAdmin/create\")\n  .send({\n    userName: \"To\",\n    password: \"Kill\",\n    email: \"A@mockingbird.com\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(403);\n    expect(res.body).to.have.property(\"superAdminExists\");\n    expect(res.body.superAdminExists).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "26f48192-bc1a-43b8-98ee-acae4144db6e",
                  "parentUUID": "508e0c6b-7087-4471-9306-47ef946c15ab",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "83bb5f3e-a68b-4412-98da-5e118c1a1784",
                "26f48192-bc1a-43b8-98ee-acae4144db6e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 315,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "41c12691-5c5c-4bb8-b095-512619f8528b",
              "title": "superAdminAuth",
              "fullFile": "D:\\247buddy\\backend\\test\\3_admin.js",
              "file": "\\test\\3_admin.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "SuperAdmin superAdminAuth \"before all\" hook",
                  "timedOut": false,
                  "duration": 2,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const doc = await SuperAdmin.find({});\nid = doc[0]._id;\ntoken = jwt.sign({ id: id }, process.env.JWT_SECRET);\ntokenPk = token.split(\".\")[0];",
                  "err": {},
                  "uuid": "83fa38ad-dc25-45da-b7c1-e4a7a90bbddb",
                  "parentUUID": "41c12691-5c5c-4bb8-b095-512619f8528b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should auth superAdmin with username",
                  "fullTitle": "SuperAdmin superAdminAuth it should auth superAdmin with username",
                  "timedOut": false,
                  "duration": 307,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/superAdmin/auth\")\n  .send({\n    userName: \"To\",\n    password: \"Kill\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"token\");\n    expect(res.body).to.have.property(\"superDoc\");\n    expect(res.body.token.split(\".\")[0]).to.equal(tokenPk.toString());\n    expect(res.body.superDoc._id).to.equal(id.toString());\n    done();\n  });",
                  "err": {},
                  "uuid": "ae55c23f-530c-4851-a6af-8dc5997db922",
                  "parentUUID": "41c12691-5c5c-4bb8-b095-512619f8528b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should auth superAdmin with email",
                  "fullTitle": "SuperAdmin superAdminAuth it should auth superAdmin with email",
                  "timedOut": false,
                  "duration": 306,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/superAdmin/auth\")\n  .send({\n    email: \"A@mockingbird.com\",\n    password: \"Kill\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"token\");\n    expect(res.body).to.have.property(\"superDoc\");\n    expect(res.body.token.split(\".\")[0]).to.equal(tokenPk.toString());\n    expect(res.body.superDoc._id).to.equal(id.toString());\n    done();\n  });",
                  "err": {},
                  "uuid": "78ba6950-c0a7-486c-a7ab-e3d272817a00",
                  "parentUUID": "41c12691-5c5c-4bb8-b095-512619f8528b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should auth superAdmin with both username email",
                  "fullTitle": "SuperAdmin superAdminAuth it should auth superAdmin with both username email",
                  "timedOut": false,
                  "duration": 304,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/superAdmin/auth\")\n  .send({\n    email: \"A@mockingbird.com\",\n    password: \"Kill\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"token\");\n    expect(res.body).to.have.property(\"superDoc\");\n    expect(res.body.token.split(\".\")[0]).to.equal(tokenPk.toString());\n    expect(res.body.superDoc._id).to.equal(id.toString());\n    done();\n  });",
                  "err": {},
                  "uuid": "2013b7fd-2fca-4f21-a956-44f7f1ecde4a",
                  "parentUUID": "41c12691-5c5c-4bb8-b095-512619f8528b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ae55c23f-530c-4851-a6af-8dc5997db922",
                "78ba6950-c0a7-486c-a7ab-e3d272817a00",
                "2013b7fd-2fca-4f21-a956-44f7f1ecde4a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 917,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "cf981b2c-f6c4-4736-9d28-997ca9c4b29e",
              "title": "Superadmin Edit/Password Change",
              "fullFile": "D:\\247buddy\\backend\\test\\3_admin.js",
              "file": "\\test\\3_admin.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should edit superadmin info",
                  "fullTitle": "SuperAdmin Superadmin Edit/Password Change it should edit superadmin info",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(\"/superAdmin/edit/info\")\n  .set(\"x-auth-token-super\", token)\n  .send({\n    userName: \"Hero\",\n    email: \"zero@hero.com\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"superUpdated\");\n    expect(res.body.superUpdated).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "60e6328b-a27b-482c-bc76-977cd24f61a2",
                  "parentUUID": "cf981b2c-f6c4-4736-9d28-997ca9c4b29e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should change superadmin password",
                  "fullTitle": "SuperAdmin Superadmin Edit/Password Change it should change superadmin password",
                  "timedOut": false,
                  "duration": 606,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(\"/superAdmin/change/password\")\n  .set(\"x-auth-token-super\", token)\n  .send({\n    oldPassword: \"Kill\",\n    newPassword: \"Bill\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"passwordChanged\");\n    expect(res.body.passwordChanged).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "3a64da88-2c0b-4c9a-8364-c009bb2434f6",
                  "parentUUID": "cf981b2c-f6c4-4736-9d28-997ca9c4b29e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should auth superAdmin with new email and password",
                  "fullTitle": "SuperAdmin Superadmin Edit/Password Change it should auth superAdmin with new email and password",
                  "timedOut": false,
                  "duration": 305,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/superAdmin/auth\")\n  .send({\n    email: \"zero@hero.com\",\n    password: \"Bill\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"token\");\n    expect(res.body).to.have.property(\"superDoc\");\n    expect(res.body.token.split(\".\")[0]).to.equal(tokenPk.toString());\n    expect(res.body.superDoc._id).to.equal(id.toString());\n    done();\n  });",
                  "err": {},
                  "uuid": "c988738d-cd0d-4877-b655-29c954e3f347",
                  "parentUUID": "cf981b2c-f6c4-4736-9d28-997ca9c4b29e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "60e6328b-a27b-482c-bc76-977cd24f61a2",
                "3a64da88-2c0b-4c9a-8364-c009bb2434f6",
                "c988738d-cd0d-4877-b655-29c954e3f347"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 917,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "00c30c10-e58f-428d-a477-4012c64022e9",
              "title": "Create admin",
              "fullFile": "D:\\247buddy\\backend\\test\\3_admin.js",
              "file": "\\test\\3_admin.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should ceate an admin",
                  "fullTitle": "SuperAdmin Create admin it should ceate an admin",
                  "timedOut": false,
                  "duration": 321,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/superAdmin/create/admin\")\n  .set(\"x-auth-token-super\", token)\n  .send({\n    adminUserName: \"Kiram\",\n    adminEmail: \"kiram@gmail.com\",\n    adminPassword: \"T3stP4ssw0rd\",\n    adminNumber: \"09385130604\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"adminCreated\");\n    expect(res.body.adminCreated).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "2ea77289-aa24-446e-a30c-25d68e2dece7",
                  "parentUUID": "00c30c10-e58f-428d-a477-4012c64022e9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should get 401 because of adminUserName",
                  "fullTitle": "SuperAdmin Create admin it should get 401 because of adminUserName",
                  "timedOut": false,
                  "duration": 11,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/superAdmin/create/admin\")\n  .set(\"x-auth-token-super\", token)\n  .send({\n    adminUserName: \"Kiram\",\n    adminEmail: \"kiram@gmafil.com\",\n    adminPassword: \"T3stP4ssw0rd\",\n    adminNumber: \"0938513f0604\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(401);\n    expect(res.body).to.have.property(\"isSame\");\n    expect(res.body.isSame).to.equal(\"userName\");\n    done();\n  });",
                  "err": {},
                  "uuid": "752df30d-327b-46a2-9bf9-2fc87f082beb",
                  "parentUUID": "00c30c10-e58f-428d-a477-4012c64022e9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should get 401 because of adminEmail",
                  "fullTitle": "SuperAdmin Create admin it should get 401 because of adminEmail",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/superAdmin/create/admin\")\n  .set(\"x-auth-token-super\", token)\n  .send({\n    adminUserName: \"Kiraml\",\n    adminEmail: \"kiram@gmail.com\",\n    adminPassword: \"T3stP4ssw0rd\",\n    adminNumber: \"0938513j0604\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(401);\n    expect(res.body).to.have.property(\"isSame\");\n    expect(res.body.isSame).to.equal(\"email\");\n    done();\n  });",
                  "err": {},
                  "uuid": "1d51ab72-582e-46c7-87aa-1fa3bae4e154",
                  "parentUUID": "00c30c10-e58f-428d-a477-4012c64022e9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should get 401 because of adminNumber",
                  "fullTitle": "SuperAdmin Create admin it should get 401 because of adminNumber",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/superAdmin/create/admin\")\n  .set(\"x-auth-token-super\", token)\n  .send({\n    adminUserName: \"Kifram\",\n    adminEmail: \"kiram@gmafil.com\",\n    adminPassword: \"T3stP4ssw0rd\",\n    adminNumber: \"09385130604\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(401);\n    expect(res.body).to.have.property(\"isSame\");\n    expect(res.body.isSame).to.equal(\"number\");\n    done();\n  });",
                  "err": {},
                  "uuid": "60dd5e4a-5b12-477f-9f98-763c29ec6fef",
                  "parentUUID": "00c30c10-e58f-428d-a477-4012c64022e9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2ea77289-aa24-446e-a30c-25d68e2dece7",
                "752df30d-327b-46a2-9bf9-2fc87f082beb",
                "1d51ab72-582e-46c7-87aa-1fa3bae4e154",
                "60dd5e4a-5b12-477f-9f98-763c29ec6fef"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 356,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "f27ea8c5-ff88-403f-8b52-ad0c8cb269ac",
              "title": "Admin routes",
              "fullFile": "D:\\247buddy\\backend\\test\\3_admin.js",
              "file": "\\test\\3_admin.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook",
                  "fullTitle": "SuperAdmin Admin routes \"before all\" hook",
                  "timedOut": false,
                  "duration": 7,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const admin = await Admin.findOne({ userName: \"Kiram\" });\nadminId = admin._id;\nadminToken = jwt.sign({ id: adminId }, process.env.JWT_SECRET);\nadminTokenPk = adminToken.split(\".\")[0];",
                  "err": {},
                  "uuid": "cc606a54-dd33-482d-b14a-aa9084f9032e",
                  "parentUUID": "f27ea8c5-ff88-403f-8b52-ad0c8cb269ac",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [],
              "suites": [
                {
                  "uuid": "3cffb15b-c561-4466-9e1e-d93d019ea75e",
                  "title": "admin auth",
                  "fullFile": "D:\\247buddy\\backend\\test\\3_admin.js",
                  "file": "\\test\\3_admin.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "it should authorize the admin using email",
                      "fullTitle": "SuperAdmin Admin routes admin auth it should authorize the admin using email",
                      "timedOut": false,
                      "duration": 328,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai\n  .request(server)\n  .post(\"/admin/auth\")\n  .send({\n    email: \"kiram@gmail.com\",\n    password: \"T3stP4ssw0rd\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"token\");\n    expect(res.body).to.have.property(\"adminDoc\");\n    expect(res.body.token.split(\".\")[0]).to.equal(\n      adminTokenPk.toString()\n    );\n    console.log(\"adminDoc\", res.body.adminDoc);\n    done();\n  });",
                      "err": {},
                      "uuid": "d0dac822-1685-4fc8-bc2e-d8bfc145a037",
                      "parentUUID": "3cffb15b-c561-4466-9e1e-d93d019ea75e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "d0dac822-1685-4fc8-bc2e-d8bfc145a037"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 328,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                },
                {
                  "uuid": "369c6c60-10aa-4a42-85b8-5f0a35c7b728",
                  "title": "admin edit info",
                  "fullFile": "D:\\247buddy\\backend\\test\\3_admin.js",
                  "file": "\\test\\3_admin.js",
                  "beforeHooks": [],
                  "afterHooks": [
                    {
                      "title": "\"after all\" hook",
                      "fullTitle": "SuperAdmin Admin routes admin edit info \"after all\" hook",
                      "timedOut": false,
                      "duration": 6,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const admins = await Admin.findOne({ _id: adminId });",
                      "err": {},
                      "uuid": "59566a83-7dd2-4af3-9a8d-02ad86715ff1",
                      "parentUUID": "369c6c60-10aa-4a42-85b8-5f0a35c7b728",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "tests": [
                    {
                      "title": "it should edit admin info",
                      "fullTitle": "SuperAdmin Admin routes admin edit info it should edit admin info",
                      "timedOut": false,
                      "duration": 17,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai\n  .request(server)\n  .put(\"/admin/edit/info\")\n  .set(\"x-auth-token-admin\", adminToken)\n  .send({\n    userName: \"Hero\",\n    phoneNumber: \"+984234247\",\n    email: \"kill@hellobill.com\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"adminEdited\");\n    expect(res.body.adminEdited).to.be.true;\n    done();\n  });",
                      "err": {},
                      "uuid": "aca99ba4-7353-451b-9ff1-664357eb5ef1",
                      "parentUUID": "369c6c60-10aa-4a42-85b8-5f0a35c7b728",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "it should change admin password",
                      "fullTitle": "SuperAdmin Admin routes admin edit info it should change admin password",
                      "timedOut": false,
                      "duration": 617,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai\n  .request(server)\n  .put(\"/admin/change/password\")\n  .set(\"x-auth-token-admin\", adminToken)\n  .send({\n    oldPassword: \"T3stP4ssw0rd\",\n    newPassword: \"Th!rstyBr0th3rs\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"passwordChanged\");\n    expect(res.body.passwordChanged).to.be.true;\n    done();\n  });",
                      "err": {},
                      "uuid": "692b1828-807a-4be9-8bb7-a8f192c0dead",
                      "parentUUID": "369c6c60-10aa-4a42-85b8-5f0a35c7b728",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "it should auth admin with new email and password",
                      "fullTitle": "SuperAdmin Admin routes admin edit info it should auth admin with new email and password",
                      "timedOut": false,
                      "duration": 326,
                      "state": "passed",
                      "speed": "slow",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai\n  .request(server)\n  .post(\"/admin/auth\")\n  .send({\n    email: \"kill@hellobill.com\",\n    password: \"Th!rstyBr0th3rs\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"token\");\n    expect(res.body).to.have.property(\"adminDoc\");\n    expect(res.body.token.split(\".\")[0]).to.equal(\n      adminTokenPk.toString()\n    );\n    done();\n  });",
                      "err": {},
                      "uuid": "494d5ae5-4cf1-4ad8-94b0-e6282eeaa530",
                      "parentUUID": "369c6c60-10aa-4a42-85b8-5f0a35c7b728",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "aca99ba4-7353-451b-9ff1-664357eb5ef1",
                    "692b1828-807a-4be9-8bb7-a8f192c0dead",
                    "494d5ae5-4cf1-4ad8-94b0-e6282eeaa530"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 960,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                },
                {
                  "uuid": "b2838b98-6258-481e-a357-10926bb770d1",
                  "title": "approve/ban listener",
                  "fullFile": "D:\\247buddy\\backend\\test\\3_admin.js",
                  "file": "\\test\\3_admin.js",
                  "beforeHooks": [
                    {
                      "title": "\"before all\" hook",
                      "fullTitle": "SuperAdmin Admin routes approve/ban listener \"before all\" hook",
                      "timedOut": false,
                      "duration": 0,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "banDate = new Date();",
                      "err": {},
                      "uuid": "b840a652-c446-425b-afd8-6ed5f072e5fb",
                      "parentUUID": "b2838b98-6258-481e-a357-10926bb770d1",
                      "isHook": true,
                      "skipped": false
                    },
                    {
                      "title": "\"before all\" hook",
                      "fullTitle": "SuperAdmin Admin routes approve/ban listener \"before all\" hook",
                      "timedOut": false,
                      "duration": 21,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const listener = new Listener({\n  userName: \"Hiram\",\n  email: \"hiram@goldman.com\",\n  \"otp.password\": \"1254\",\n  \"otp.creationHour\": new Date()\n    .toISOString()\n    .substr(11, 5)\n    .replace(\":\", \"\"),\n  cell: \"+919655550189 \",\n  categories: [\"Killing\", \"Disembowling\"],\n  emailVerificationCode: \"1121\",\n});\nconst listenerDoc = await listener.save();\nlistenerId = listenerDoc._id;",
                      "err": {},
                      "uuid": "91e85ccb-31dd-41f4-ba85-595a545404e7",
                      "parentUUID": "b2838b98-6258-481e-a357-10926bb770d1",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "it should approve the listener",
                      "fullTitle": "SuperAdmin Admin routes approve/ban listener it should approve the listener",
                      "timedOut": false,
                      "duration": 17,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai\n  .request(server)\n  .put(`/admin/set/approval/${listenerId}`)\n  .set(\"x-auth-token-admin\", adminToken)\n  .send({\n    approval: \"true\",\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"isApproved\");\n    expect(res.body.isApproved).to.be.true;\n    done();\n  });",
                      "err": {},
                      "uuid": "13061200-a0a1-45da-8397-71d7b3cf0e78",
                      "parentUUID": "b2838b98-6258-481e-a357-10926bb770d1",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "it should ban the listener",
                      "fullTitle": "SuperAdmin Admin routes approve/ban listener it should ban the listener",
                      "timedOut": false,
                      "duration": 20,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai\n  .request(server)\n  .put(`/admin/ban/${listenerId}`)\n  .set(\"x-auth-token-admin\", adminToken)\n  .send({\n    endDate: banDate,\n  })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"listenerBanned\");\n    expect(res.body.listenerBanned).to.be.true;\n    done();\n  });",
                      "err": {},
                      "uuid": "60ed4ed2-7b11-49f8-8b17-4b15c0d8e3b2",
                      "parentUUID": "b2838b98-6258-481e-a357-10926bb770d1",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "it should reaffirm listener ban and approval",
                      "fullTitle": "SuperAdmin Admin routes approve/ban listener it should reaffirm listener ban and approval",
                      "timedOut": false,
                      "duration": 11,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "const listenerDoc = await Listener.findOne({ _id: listenerId });\nexpect(\n  listenerDoc.bannedStatus.expireDate.toISOString().split(\".\")[0]\n).to.equal(banDate.toISOString().split(\".\")[0]);\nexpect(listenerDoc.approvalStatus.approved).to.be.true;",
                      "err": {},
                      "uuid": "5e7b14d0-0c85-42e7-a7ff-8265f3bd93a9",
                      "parentUUID": "b2838b98-6258-481e-a357-10926bb770d1",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "13061200-a0a1-45da-8397-71d7b3cf0e78",
                    "60ed4ed2-7b11-49f8-8b17-4b15c0d8e3b2",
                    "5e7b14d0-0c85-42e7-a7ff-8265f3bd93a9"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 48,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                },
                {
                  "uuid": "799c06b3-33a0-40e6-b65f-04d3e60ae22d",
                  "title": "Admin gets",
                  "fullFile": "D:\\247buddy\\backend\\test\\3_admin.js",
                  "file": "\\test\\3_admin.js",
                  "beforeHooks": [],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "it should get all the admins",
                      "fullTitle": "SuperAdmin Admin routes Admin gets it should get all the admins",
                      "timedOut": false,
                      "duration": 10,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai\n  .request(server)\n  .get(\"/admin/get/all\")\n  .set(\"x-auth-token-super\", token)\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"adminDocs\");\n    expect(res.body.adminDocs).to.be.an(\"array\");\n    expect(res.body.adminDocs).not.be.empty;\n    done();\n  });",
                      "err": {},
                      "uuid": "a7f59bc9-4bf2-4446-8d56-72a3ad65a969",
                      "parentUUID": "799c06b3-33a0-40e6-b65f-04d3e60ae22d",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "it should get a single admins",
                      "fullTitle": "SuperAdmin Admin routes Admin gets it should get a single admins",
                      "timedOut": false,
                      "duration": 9,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai\n  .request(server)\n  .get(`/admin/get/single/${adminId}`)\n  .set(\"x-auth-token-super\", token)\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"adminDoc\");\n    expect(res.body.adminDoc).to.be.an(\"object\");\n    expect(res.body.adminDoc).not.be.null;\n    done();\n  });",
                      "err": {},
                      "uuid": "49243fa2-3d43-4d03-be52-43f0f54dce0e",
                      "parentUUID": "799c06b3-33a0-40e6-b65f-04d3e60ae22d",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "a7f59bc9-4bf2-4446-8d56-72a3ad65a969",
                    "49243fa2-3d43-4d03-be52-43f0f54dce0e"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 19,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                },
                {
                  "uuid": "1099c9e7-8aac-4843-b0f7-bff102eaac4e",
                  "title": "Admin 404s",
                  "fullFile": "D:\\247buddy\\backend\\test\\3_admin.js",
                  "file": "\\test\\3_admin.js",
                  "beforeHooks": [
                    {
                      "title": "\"before all\" hook",
                      "fullTitle": "SuperAdmin Admin routes Admin 404s \"before all\" hook",
                      "timedOut": false,
                      "duration": 3,
                      "state": null,
                      "speed": null,
                      "pass": false,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "await Listener.deleteMany({});\nawait Admin.deleteMany({});\nawait SuperAdmin.deleteMany({});",
                      "err": {},
                      "uuid": "128b7a47-bedf-4424-b200-88f64d265ff1",
                      "parentUUID": "1099c9e7-8aac-4843-b0f7-bff102eaac4e",
                      "isHook": true,
                      "skipped": false
                    }
                  ],
                  "afterHooks": [],
                  "tests": [
                    {
                      "title": "it should get 404 for all the admins",
                      "fullTitle": "SuperAdmin Admin routes Admin 404s it should get 404 for all the admins",
                      "timedOut": false,
                      "duration": 4,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai\n  .request(server)\n  .get(\"/admin/get/all\")\n  .set(\"x-auth-token-super\", token)\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(404);\n    expect(res.body).to.have.property(\"noAdminFound\");\n    expect(res.body.noAdminFound).to.be.true;\n    done();\n  });",
                      "err": {},
                      "uuid": "88817fbb-3b30-4caa-b9bb-c652f6135ae9",
                      "parentUUID": "1099c9e7-8aac-4843-b0f7-bff102eaac4e",
                      "isHook": false,
                      "skipped": false
                    },
                    {
                      "title": "it should get 404 for a single admins",
                      "fullTitle": "SuperAdmin Admin routes Admin 404s it should get 404 for a single admins",
                      "timedOut": false,
                      "duration": 4,
                      "state": "passed",
                      "speed": "fast",
                      "pass": true,
                      "fail": false,
                      "pending": false,
                      "context": null,
                      "code": "chai\n  .request(server)\n  .get(`/admin/get/single/${adminId}`)\n  .set(\"x-auth-token-super\", token)\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(404);\n    expect(res.body).to.have.property(\"noAdmin\");\n    expect(res.body.noAdmin).to.be.true;\n    done();\n  });",
                      "err": {},
                      "uuid": "7772e125-595a-487c-9974-6f01a1b03c4b",
                      "parentUUID": "1099c9e7-8aac-4843-b0f7-bff102eaac4e",
                      "isHook": false,
                      "skipped": false
                    }
                  ],
                  "suites": [],
                  "passes": [
                    "88817fbb-3b30-4caa-b9bb-c652f6135ae9",
                    "7772e125-595a-487c-9974-6f01a1b03c4b"
                  ],
                  "failures": [],
                  "pending": [],
                  "skipped": [],
                  "duration": 8,
                  "root": false,
                  "rootEmpty": false,
                  "_timeout": 50000
                }
              ],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "543be169-b9a9-48b3-8cfe-bd26daa7c394",
          "title": "Blocked Numbers",
          "fullFile": "D:\\247buddy\\backend\\test\\4_blockedNumbers.js",
          "file": "\\test\\4_blockedNumbers.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook",
              "fullTitle": "Blocked Numbers \"before all\" hook",
              "timedOut": false,
              "duration": 13,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await BlockedNumbers.deleteMany({});\nawait Admin.deleteMany({});\nawait Listener.deleteMany({});\nconst admin = new Admin({\n  userName: \"Heru Kasagi\",\n  email: \"hero@kasagi.com\",\n  phoneNumber: \"09324232\",\n  password: \"lfsdf\",\n});\nconst adminDoc = await admin.save();\nadminToken = jwt.sign({ id: adminDoc._id }, process.env.JWT_SECRET);",
              "err": {},
              "uuid": "017ead54-e4ae-4446-8470-6b8c23d89813",
              "parentUUID": "543be169-b9a9-48b3-8cfe-bd26daa7c394",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before all\" hook",
              "fullTitle": "Blocked Numbers \"before all\" hook",
              "timedOut": false,
              "duration": 2,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const listenerOne = new Listener({\n  \"approvalStatus.approved\": true,\n  emailVerified: true,\n  cellActivated: true,\n  email: \"test1@test.com\",\n  categories: [\"TestCat1\", \"TestCat2\"],\n  userName: \"Test1\",\n  \"status.online\": true,\n});\nconst listenerTwo = new Listener({\n  \"approvalStatus.approved\": true,\n  emailVerified: true,\n  cellActivated: true,\n  email: \"test2@test.com\",\n  categories: [\"TestCat3\", \"TestCat2\"],\n  userName: \"Test2\",\n  \"status.currentEngagedSession\": \"None\",\n  \"status.online\": false,\n});\nlistenerOne.save().then((listenerDocOne) => {\n  listenerTwo.save().then((listenerDocTwo) => {\n    idOne = listenerDocOne._id;\n    idTwo = listenerDocTwo._id;\n    tokenOne = jwt.sign({ id: idOne }, process.env.JWT_SECRET);\n    tokenTwo = jwt.sign({ id: idTwo }, process.env.JWT_SECRET);\n  });\n});",
              "err": {},
              "uuid": "f2a013c2-c350-4940-911b-e54edb2e7f91",
              "parentUUID": "543be169-b9a9-48b3-8cfe-bd26daa7c394",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "759bc1f2-7dc2-4bf8-832c-27f5fcbb973d",
              "title": "blockign the number",
              "fullFile": "D:\\247buddy\\backend\\test\\4_blockedNumbers.js",
              "file": "\\test\\4_blockedNumbers.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should block the number",
                  "fullTitle": "Blocked Numbers blockign the number it should block the number",
                  "timedOut": false,
                  "duration": 17,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/blocked/block\")\n  .set(\"x-auth-token-admin\", adminToken)\n  .send({ number: \"+9385130604\", reportMessage: \"bothering girls\" })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body.numberBlocked).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "3633e0f8-a1e9-47e7-9076-1e0b517696f6",
                  "parentUUID": "759bc1f2-7dc2-4bf8-832c-27f5fcbb973d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should not be able to pair up",
                  "fullTitle": "Blocked Numbers blockign the number it should not be able to pair up",
                  "timedOut": false,
                  "duration": 7,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/session/pairup/randomly\")\n  .send({ seekerNumber: \"+9385130604\" })\n  .end((err, res) => {\n    if (err) done(err);\n    console.log(res.body);\n    expect(res).to.have.status(403);\n    expect(res.body).to.have.property(\"numberBlocked\");\n    expect(res.body.numberBlocked).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "15a16a3d-00c7-4d51-881e-fc902c83303f",
                  "parentUUID": "759bc1f2-7dc2-4bf8-832c-27f5fcbb973d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should unbblock the number",
                  "fullTitle": "Blocked Numbers blockign the number it should unbblock the number",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .put(\"/blocked/unblock\")\n  .set(\"x-auth-token-admin\", adminToken)\n  .send({ number: \"+9385130604\" })\n  .end((err, res) => {\n    if (err) done(err);\n    expect(res).to.have.status(200);\n    expect(res.body.numberUnblocked).to.be.true;\n    done();\n  });",
                  "err": {},
                  "uuid": "9bc455f0-f424-4e4a-82b1-e1aebc38e245",
                  "parentUUID": "759bc1f2-7dc2-4bf8-832c-27f5fcbb973d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "it should be able to pair up",
                  "fullTitle": "Blocked Numbers blockign the number it should be able to pair up",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .post(\"/session/pairup/randomly\")\n  .send({ seekerNumber: \"+9385130604\" })\n  .end((err, res) => {\n    if (err) done(err);\n    console.log(res.body);\n    expect(res).to.have.status(200);\n    expect(res.body).to.have.property(\"presentedListeners\");\n    expect(res.body).to.have.property(\"sessionDoc\");\n    expect(res.body.presentedListeners).to.be.an(\"array\");\n    expect(res.body.presentedListeners).not.be.empty;\n    expect(res.body.sessionDoc).to.be.an(\"object\");\n    expect(res.body.presentedListeners).to.include(idOne.toString());\n    done();\n  });",
                  "err": {},
                  "uuid": "043d6181-bccf-4e6c-951d-7d7f0f0b9954",
                  "parentUUID": "759bc1f2-7dc2-4bf8-832c-27f5fcbb973d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3633e0f8-a1e9-47e7-9076-1e0b517696f6",
                "15a16a3d-00c7-4d51-881e-fc902c83303f",
                "9bc455f0-f424-4e4a-82b1-e1aebc38e245",
                "043d6181-bccf-4e6c-951d-7d7f0f0b9954"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 54,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 50000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}